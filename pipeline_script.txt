#!/bin/bash

# defining file paths as variables for simpler use later in the script
fastqdir=/localdisk/data/BPSM/AY21/fastq
Tcongo_genome=/localdisk/data/BPSM/AY21/Tcongo_genome/TriTrypDB-46_TcongolenseIL3000_2019_Genome.fasta.gz
bedfile=/localdisk/data/BPSM/AY21/TriTrypDB-46_TcongolenseIL3000_2019.bed

#for fastq_file in $fastqdir/*fq.gz
#do
# fastqc is running but either very slowly or quickly and with errors. Doesn't make it the whole way.
# also still need to think how I interpret the output to give the user something informative.
#fastqc -o fastqc_outputs $fastq_file &
#done
 

# create bowtie2 index database for the T. congolense reference genome
#bowtie2-build $Tcongo_genome Tcongo_indexed_genome

# iterate over all pairs of fastq files
for fastq_1_file in $fastqdir/*1.fq.gz
do
fastq_2_file=`echo $fastq_1_file | sed 's/_1/_2/'`

# map each pair of reads to the bowtie index database for the T. congolense reference genome 
#bowtie2 -x Tcongo_indexed_genome -q -1 $fastq_1_file -2 $fastq_2_file -S ${fastq_1_file:32:-8}.sam

# convert sam file from bowtie2 output to a bam file
#samtools view -b -S ${fastq_1_file:32:-8}.sam > ${fastq_1_file:32:-8}.bam
#samtools sort ${fastq_1_file:32:-8}.bam -o ${fastq_1_file:32:-8}.sorted.bam
#samtools index ${fastq_1_file:32:-8}.sorted.bam

# count the reads using bedtools multicov. -D means includes duplicate reads
#bedtools multicov -D -bams ${fastq_1_file:32:-8}.sorted.bam -bed $bedfile > ${fastq_1_file:32:-8}.counts

done

# Now need to generate groups from the sample info file.

IFS=$'\t'
while read id sample replicate time treatment end1 end2
do
echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2"
if test $sample == "Clone1" && test $time == "0" 
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone1_0_group.txt
fi
if test $sample == Clone2 && test $time == 0 
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone2_0_group.txt
fi
if test $sample == WT && test $time == 0 
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> wt_0_group.txt
fi
if test $sample == Clone1 && test $time == 24 && test $treatment == Uninduced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone1_24_unind_group.txt
fi
if test $sample == Clone2 && test $time == 24 && test $treatment == Uninduced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone2_24_unind_group.txt
fi
if test $sample == WT && test $time == 24 && test $treatment == Uninduced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> wt_24_unind_group.txt
fi
if test $sample == Clone1 && test $time == 48 && test $treatment == Uninduced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone1_48_unind_group.txt
fi
if test $sample == Clone2 && test $time == 48 && test $treatment == Uninduced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone2_48_unind_group.txt
fi
if test $sample == WT && test $time == 48 && test $treatment == Uninduced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> wt_48_unind_group.txt
fi
if test $sample == Clone1 && test $time == 24 && test $treatment == Induced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone1_24_ind_group.txt
fi
if test $sample == Clone2 && test $time == 24 && test $treatment == Induced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone2_24_ind_group.txt
fi
if test $sample == WT && test $time == 24 && test $treatment == Induced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> wt_24_ind_group.txt
fi
if test $sample == Clone1 && test $time == 48 && test $treatment == Induced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone1_48_ind_group.txt
fi
if test $sample == Clone2 && test $time == 48 && test $treatment == Induced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> clone2_48_ind_group.txt
fi
if test $sample == WT && test $time == 48 && test $treatment == Induced
then echo -e "$id\t$sample\t$replicate\t$time\t$treatment\t$end1\t$end2" >> wt_48_ind_group.txt
fi
done < "/localdisk/data/BPSM/AY21/fastq/100k.fqfiles" 
